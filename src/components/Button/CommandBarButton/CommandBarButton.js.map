{"version":3,"file":"CommandBarButton.js","sourceRoot":"../src/","sources":["components/Button/CommandBarButton/CommandBarButton.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,4CAA2C;AAC3C,gDAA6E;AAE7E,qEAAsD;AAGtD;IAAsC,4CAA+B;IADrE;QAAA,qEAmBC;QAjBC;;WAEG;QACO,+BAAyB,GAAG,KAAK,CAAC;;IAc9C,CAAC;IAZQ,iCAAM,GAAb;QACM,IAAA,eAA8B,EAA5B,kBAAM,EAAE,gBAAK,CAAgB;QAEnC,MAAM,CAAC,CACL,oBAAC,uBAAU,uBACJ,IAAI,CAAC,KAAK,IACf,gBAAgB,EAAC,uBAAuB,EACxC,MAAM,EAAG,mCAAS,CAAC,KAAM,EAAE,MAAM,CAAC,EAClC,mBAAmB,EAAG,sBAAU,IAChC,CACH,CAAC;IACJ,CAAC;IAjBU,gBAAgB;QAD5B,wBAAY,CAAC,kBAAkB,EAAE,CAAC,OAAO,CAAC,CAAC;OAC/B,gBAAgB,CAkB5B;IAAD,uBAAC;CAAA,AAlBD,CAAsC,yBAAa,GAkBlD;AAlBY,4CAAgB","sourcesContent":["import * as React from 'react';\r\nimport { BaseButton } from '../BaseButton';\r\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\r\nimport { IButtonProps } from '../Button.types';\r\nimport { getStyles } from './CommandBarButton.styles';\r\n\r\n@customizable('CommandBarButton', ['theme'])\r\nexport class CommandBarButton extends BaseComponent<IButtonProps, {}> {\r\n  /**\r\n   * Tell BaseComponent to bypass resolution of componentRef.\r\n   */\r\n  protected _shouldUpdateComponentRef = false;\r\n\r\n  public render() {\r\n    let { styles, theme } = this.props;\r\n\r\n    return (\r\n      <BaseButton\r\n        { ...this.props }\r\n        variantClassName='ms-Button--commandBar'\r\n        styles={ getStyles(theme!, styles) }\r\n        onRenderDescription={ nullRender }\r\n      />\r\n    );\r\n  }\r\n}"]}